--{{ Т9_Тесты - проект для тестирования проектов, созданных на платформе Т9 (c) ТБ.Бюджет, 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
--}

class inherited СИС2.картБазовая "Тестовые примеры";

import СИС2 classes СтроковыеФункции;

inclass public

  stored var Условие_ТипТеста: Integer;

inobject public

  var обУсловие_ТипТеста: Integer;
  var НеИзменятьПростойФильтр: logical;
  var ТипБазовогоКлассаПоУмолчанию: Константы.типБазовыйКласс;

inobject private

  var ркВсеТипы: RadioButton;
  var ркТипШаблон: RadioButton;
  var ркТипНеШаблон: RadioButton;
  var локУсловие_ТипТеста: Integer;

--{{ Вспомогательные методы

  --@doc Ф-я перекрывает СИС2
  func ПолучитьФильтрКартотеки(var locTreeFilter: string = nil): string;
    if (Условие_ТипТеста = 1):
      Result = 'ЭтоШаблон';
    elsif (Условие_ТипТеста = 2):
      Result = 'not ЭтоШаблон';
    fi;
  end;

  --@doc Перемещает фокус на картотеку при непустом запросе картотеки
  --@doc в случае иерархической картотеки - при непустом содержимом текущей группы
  --@doc Метод переименован в целях избежания конфликтов с тестовым окружением
  proc ФокусНаКартотеку2;
    with Self.Query do
      if not (Bof and Eof):
        Window.CurrentObject = Window.Cardfile;
      fi;
    end;
  end;

  proc ВидШаблона;
    ркВсеТипы.Enabled = not НеИзменятьПростойФильтр;
    ркТипШаблон.Enabled = not НеИзменятьПростойФильтр;
    ркТипНеШаблон.Enabled = not НеИзменятьПростойФильтр;
  end;

--}}

--{{ Обработчики событий шаблона

  proc шаблон_ПриСоздании(Context :Variant);
    var locColumn: CardFileColumn;
    inherited шаблон_ПриСоздании(Context);
    locColumn = Self.CardFile.ColumnByField['ТипБазовогоКласса'];
    Библио.ОбновитьСписокКартПоля(locColumn, Константы.ТипыБазовыйхКлассов);
    locColumn.List.Add('Не определено|0');
  end;

  proc шаблон_ПриОткрытии(Create: Logical);
    if НеИзменятьПростойФильтр:
      локУсловие_ТипТеста = Условие_ТипТеста;
      Условие_ТипТеста = обУсловие_ТипТеста;
    fi;
    --Запретить_Добавление = true;
    inherited шаблон_ПриОткрытии(Create);
    ПараметрыНовойЗаписи = [['ЭтоШаблон',true],['ТипБазовогоКласса',ТипБазовогоКлассаПоУмолчанию]];
    ВидШаблона;
  end;

  func шаблон_ПередЗакрытием(ModalResult: Integer): Logical;
    Result = inherited шаблон_ПередЗакрытием(ModalResult);
    if НеИзменятьПростойФильтр:
      Условие_ТипТеста = локУсловие_ТипТеста;
    fi;
  end;
--}}

--{{ Обработчики событий прочих объектов шаблона

  proc ркПриИзменении(Sender: RadioButton);
    ОбновитьФильтр;
    ФокусНаКартотеку2;
  end;
--}}


end