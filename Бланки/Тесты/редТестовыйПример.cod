--{{ Т9_Тесты - проект для тестирования проектов, созданных на платформе Т9 (c) ТБ.Бюджет, 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
--}

class inherited СИС2.БазовыйБланкРедактор "Тестовый пример", editor ТестовыйПример;

inobject private

--{{ Вспомогательные методы

  proc ВидФормы;
    var РазрешитьВыборБазовогоКласса: logical;
    var locCell: TemplateCell;
    if ЭтоШаблон:
      РазрешитьВыборБазовогоКласса = (Record.State = Record.Created);
    fi;
    locCell = Template.CellByField['ТипБазовогоКласса'];
    locCell.Style = if(РазрешитьВыборБазовогоКласса, StyleByName('Поле выбора'), StyleByName('Поле вывода'));
    locCell.Enabled = РазрешитьВыборБазовогоКласса;
    locCell.Button = РазрешитьВыборБазовогоКласса;
    locCell = Template.CellByField['РевизияН'];
    locCell.Style = if(not ЭтоШаблон, StyleByName('Поле ввода'), StyleByName('Поле вывода'));
    locCell.Enabled = not ЭтоШаблон;
    locCell = Template.CellByField['РевизияК'];
    locCell.Style = if(not ЭтоШаблон, StyleByName('Поле ввода'), StyleByName('Поле вывода'));
    locCell.Enabled = not ЭтоШаблон;
  end;

  proc УстановитьФокусНаПервоеПолеВвода;
    Self.Template.CellByField['Наим'].SetFocus;
  end;
--}}

--{{ Обработчики событий шаблона

  proc шаблон_ПриСоздании(Context :Variant);
    var locCell: TemplateCell;
    inherited шаблон_ПриСоздании(Context);
    locCell = Self.Template.CellByField['ТипБазовогоКласса'];
    Библио.ОбновитьСписокПоля(locCell, Константы.ТипыБазовыйхКлассов);
    locCell.List.Add('Не определено|0');
  end;

  proc шаблон_ПриСчитывании;
    inherited шаблон_ПриСчитывании;
    ВидФормы;
  end;
--}}


--{{ Обработчики событий клеток шаблона

  func ПолеЗаголовокОкнаФормы_ПриВыводе (Cell: TemplateCell; Value: Variant; Action: Template.OutputTypes; var Format: String): String;
    Window.Caption = if(ЭтоШаблон, 'Тестовый пример (шаблон)', 'Тестовый пример');
    Result = if(ЭтоШаблон, 'Описание типового теста', 'Описание теста');
  end;
--}}

end