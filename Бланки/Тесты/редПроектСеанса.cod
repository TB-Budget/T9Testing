--{{ Т9_Тесты - проект для тестирования проектов, созданных на платформе Т9 (c) ТБ.Бюджет, 2015

--Данный проект является свободным программным обеспечением. Вы вправе распространять его
--и/или модифицировать в соответствии с условиями версии 2.1 либо по вашему выбору с условиями
--более поздней версии Стандартной Общественной Лицензии Ограниченного Применения GNU,
--опубликованной Free Software Foundation.

--Мы распространяем этот проект в надежде на то, что он будет вам полезен, однако
--НЕ ПРЕДОСТАВЛЯЕМ НА НЕГО НИКАКИХ ГАРАНТИЙ, в том числе ГАРАНТИИ ТОВАРНОГО СОСТОЯНИЯ ПРИ ПРОДАЖЕ
--и ПРИГОДНОСТИ ДЛЯ ИСПОЛЬЗОВАНИЯ В КОНКРЕТНЫХ ЦЕЛЯХ. Для получения более подробной информации
--ознакомьтесь со Стандартной Общественной Лицензией Ограниченного Применений GNU.

--Вместе с данным проектом вы должны были получить экземпляр Стандартной Общественной Лицензии
--Ограниченного Применения GNU. Если вы его не получили, сообщите об этом в Software Foundation, Inc.,
--59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
--}

class inherited СИС2.БазовыйБланкРедактор "Проект программы тестирования", editor ПроектСеанса;

import СИС2 classes Функции;

  inclass private

  stored var ЗаморозитьЗаголовокТаблицы: logical;
  stored var ПоказыватьЗебру: logical;

  inobject private

  var фреймРеквизиты: TemplateFrame;
  var фреймСценарий: TemplateFrame;
  var секцСценарийЗаголовокТаблицы: TemplateSection;
  var секцСценарий: TemplateSection;
  var NN: integer[] = $;

--{{ Вспомогательные методы

  proc ЗаморозкаЗаголовкаТаблицы;
    var локГраницаЗаморозки: numeric;
    var r: integer;
    with секцСценарийЗаголовокТаблицы do
      for r = 1 .. RowsCount do
        локГраницаЗаморозки = локГраницаЗаморозки + Row[r].Height;
      od;
    end;
    фреймСценарий.FreezeArea(0, 0, 0, локГраницаЗаморозки);
  end;
--}}

--{{ Обработчики событий шаблона

  proc шаблон_ПриСчитывании;
    inherited шаблон_ПриСчитывании;
    if ЗаморозитьЗаголовокТаблицы:
      ЗаморозкаЗаголовкаТаблицы;
    fi;
  end;
--}}

--{{ Обработчики событий клеток шаблона

  func Поле_ПриНажатии (Cell: TemplateCell; Action: Template.ClickTypes): Logical;
    var локЗаписьТестПлана: Т9_Тесты.ТестПланКласса;
    var locCrd: CardForm;
    var Index, p: integer;
    var aDocId: integer[];
    var locFlt: string[];
    proc ДоУдаления;--{
      if (Cell.Owner.Count >= Cell.Frame):
        try
        Cell.SetFocus;
        ExecuteCommand('Kernel.Move.Up', false);
        except
        end;
      fi;
    end;--}
    proc ПослеДобавления;--{
      if (Cell.Owner.Count > 0):
        Cell.SetFocus;
        ExecuteCommand('Kernel.Move.Down', true);
      fi;
    end;--}
    if (Cell.Contents = '+') and (Cell.Owner = секцСценарийЗаголовокТаблицы):--{ добавление тест-плана класса в тест-план из заголовка таблицы
      for p = 1 .. ТестПланПП.Count do
        aDocId[p] = ТестПланПП[p].ТестПланКласса.DocId;
      od;
      locCrd = Тесты.картТестПланКласса.Create;
      locCrd.обУсловие_ТипТестПлана = 2; -- только НЕ шаблоны
      locCrd.НеИзменятьПростойФильтр = true;
      if CmOk = locCrd.ShowEx(локЗаписьТестПлана, 'not DocId in ' + Str(aDocId), Window.ModalWindow):
        with ТестПланПП.Insert(1) do
          ТестПланКласса = локЗаписьТестПлана;
        end;
        ПослеДобавления;
      fi;
      --}
    elsif (Cell.Contents = '+') and (Cell.Owner = секцСценарий):--{ добавление тест-плана класса в тест-план из строки таблицы
      Index = Cell.Frame;
      for p = 1 .. ТестПланПП.Count do
        aDocId[p] = ТестПланПП[p].ТестПланКласса.DocId;
      od;
      locCrd = Тесты.картТестПланКласса.Create;
      locCrd.обУсловие_ТипТестПлана = 2; -- только НЕ шаблоны
      locCrd.НеИзменятьПростойФильтр = true;
      if CmOk = locCrd.ShowEx(локЗаписьТестПлана, 'not DocId in ' + Str(aDocId), Window.ModalWindow):
        Index = Cell.Frame;
        with ТестПланПП.Insert(Index + 1) do
          ТестПланКласса = локЗаписьТестПлана;
        end;
        ПослеДобавления;
      fi;
      --}
    elsif (Cell.Contents = 'x') and (Cell.Owner = секцСценарий):--{ удаление строки из тест-плана (без удаления тест-плана класса из справочника)
      Index = Cell.Frame;
      ДоУдаления;
      ТестПланПП.Delete(Index);
      --}
    -- перемещение строк
    elsif (Cell.Contents = '5') and (Cell.Owner = секцСценарий):--{ вверх
      Cell.SetFocus;
      if (Cell.Frame > 1):
        секцСценарий.FrameUp(Cell.Frame);
      fi;--}
    elsif (Cell.Contents = '6') and (Cell.Owner = секцСценарий):--{ вниз
      Cell.SetFocus;
      if (Cell.Frame < секцСценарий.FramesCount):
        секцСценарий.FrameDown(Cell.Frame);
      fi;--}
    -- карточка тест-плана класса
    elsif (Cell.Contents = '...') and (Cell.Owner = секцСценарий):--{
      Index = Cell.Frame;
      локЗаписьТестПлана = ТестПланПП[Index].ТестПланКласса;
      if (локЗаписьТестПлана <> nil):
        OpenBlankEditor('Тесты.редТестПланКласса', локЗаписьТестПлана,  Window.ModalWindow);
      else
        Message('Ошибка. Тест-план класса был удален нештатным способом.');
      fi;--}
    fi;
  end;

  proc Поле_ПриРисовании(Cell: TemplateCell; Selected: Logical; var Color: Integer; var FieldColor: Integer; Font: Font);
    var locStyle: TemplateStyle;
    var locColor, locR, locG, locB, newR, newG, newB: Integer;
    var Delta: integer;
    if ПоказыватьЗебру and (Cell.Owner = секцСценарий):
      if (Mod(Cell.Frame, 2) = 0): -- это четная позиция
        Delta = -40;
        locStyle = Cell.Style;
        locColor = locStyle.FieldColor;
        SplitColor(locColor, locR, locG, locB);
        newR = if(((locR + Delta) > 0), Min([255, (locR + Delta)]), 0);
        newG = if(((locG + Delta) > 0), Min([255, (locG + Delta)]), 0);
        newB = if(((locB + Delta) > 0), Min([255, (locB + Delta)]), 0);
        locColor = newR + (newG * 256) + (newB * 256 * 256);
        FieldColor = locColor;
      fi;
    fi;
  end;
--}}

--{{ Обработчики событий прочих объектов шаблона

  proc флПриИзменении (Sender: CheckBox);
    if not ЗаморозитьЗаголовокТаблицы:
      фреймСценарий.UnFreezeArea;
    else
      ЗаморозкаЗаголовкаТаблицы;
    fi;
  end;
--}}

end