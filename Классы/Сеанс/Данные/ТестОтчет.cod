class inherited Сеанс.Данные.Элемент "Элемент <Тест-отчет>";

import classes Константы;

inclass public

  func CreateEx(локИсходныеДанные: variant[] = nil): Сеанс.Данные.ТестОтчет;
    Result = inherited CreateEx(локИсходныеДанные);
    Result.ИконкаЭлемента_ = ImageOfGrid[iUnCheck];
    if (локИсходныеДанные[индДанныеВЗаписи] <> nil):
      Result.ОписаниеЭлемента_   = локИсходныеДанные[индДанныеВЗаписи].GetField('Пример').Наим;
      Result.Наим_               = локИсходныеДанные[индДанныеВЗаписи].GetField('Пример').Наим;
      Result.СценарийТеста_      = локИсходныеДанные[индДанныеВЗаписи].GetField('Пример').СценарийТеста;
      Result.ОжидаемыйРезультат_ = локИсходныеДанные[индДанныеВЗаписи].GetField('Пример').ОжидаемыйРезультат;
      Result.Результат_          = локИсходныеДанные[индДанныеВЗаписи].GetField('Результат');
      Result.Заключение_         = локИсходныеДанные[индДанныеВЗаписи].GetField('Комментарий');
      Result.КолТестовУспех_     = if(Result.ТестПройден, 1, 0);
      Result.КолТестовПровал_    = if(Result.ТестПровален, 1, 0);
    else
      Result.ОписаниеЭлемента_ = 'Тест-отчет';
    fi;
  end;

inobject  public

  func ИконкаЭлемента: Image;
    if ТестПройден:     Result = ImageOfGrid[iCheckGreen];
    elsif ТестПровален: Result = ImageOfGrid[iCheckRed];
    else                Result = ИконкаЭлемента_;
    fi;
  end;

  func Наим: string; Return Наим_; end;
  func СценарийТеста: string; Return СценарийТеста_; end;
  func ОжидаемыйРезультат: string; Return ОжидаемыйРезультат_; end;
  func Результат: integer; Return Результат_; end;
  func ТестПройден: logical; Return (Результат_ = 1); end;
  func ТестПровален: logical; Return (Результат_ = -1); end;
  func ТестВыполнен: logical; Return (Результат_ in [-1,1]); end;
  func Заключение: string; Return Заключение_; end;

  proc УстТестПройден(locValue: logical);
    Результат_ = if(locValue, 1, 0);
    КолТестовУспех_ = 1;
    КолТестовПровал_ = 0;
    ДанныеИзменены_ = true;
    ДанныеВЗаписи_.Результат = Результат_;
    ИзменитьСостояниеЗаписи;
  end;

  proc УстТестПровален(locValue: logical);
    Результат_ = if(locValue, -1, 0);
    КолТестовУспех_ = 0;
    КолТестовПровал_ = 1;
    ДанныеИзменены_ = true;
    ДанныеВЗаписи_.Результат = Результат_;
    ИзменитьСостояниеЗаписи;
  end;

  proc УстЗаключение(locValue: string);
    Заключение_ = locValue;
    ДанныеИзменены_ = true;
    ДанныеВЗаписи_.Комментарий = Заключение_;
    ИзменитьСостояниеЗаписи;
  end;

inobject private

  var Наим_: string;
  var СценарийТеста_: string;
  var ОжидаемыйРезультат_: string;
  var Результат_: integer;
  var Заключение_: String;


end