class "";

inclass public

  type типОписаниеЭлементаДанных = (индОписаниеЭлемента = 1, индНомерПп, индПолноеИмяКласса, индДанныеВЗаписи);
--                    типТипЭлемента,
--                    типНомерПп,
--                    типИдентификатор,
--                    типКлючЭлемента);

  func CreateEx(локИсходныеДанные: variant[] = nil): Сеанс.Данные.Элемент;
    Result = inherited Create;
    Result.ОписаниеЭлемента_ = локИсходныеДанные[индОписаниеЭлемента] as string;
    Result.НомерПП_          = локИсходныеДанные[индНомерПп] as integer;
    Result.ПолноеИмяКласса_  = локИсходныеДанные[индПолноеИмяКласса] as string;
    Result.ДанныеВЗаписи_    = локИсходныеДанные[индДанныеВЗаписи] as record;
  end;

inobject public

  func ИконкаЭлемента: Image;
    Return ИконкаЭлемента_;
  end;


  func ОписаниеЭлемента: string; Return ОписаниеЭлемента_; end;
  func НомерПП: integer; Return НомерПП_; end;
  func ПолноеИмяКласса: string; Return ПолноеИмяКласса_; end;

  func ДанныеВЗаписи: Record; Return ДанныеВЗаписи_; end;
  func ДанныеИзменены: logical; Return ДанныеИзменены_; end;

  func КолТестовВсего: integer; Return КолТестовВсего_; end;
  func КолТестовУспех: integer; Return КолТестовУспех_; end;
  func КолТестовПровал: integer; Return КолТестовПровал_; end;

  func КолТестовБезРезультата: integer;
    Result = КолТестовВсего - (КолТестовУспех + КолТестовПровал);
  end;

  func ПрцТестовВсего: numeric;
    Result = if((КолТестовВсего > 0), 100, 0);
  end;

  func ПрцТестовУспех: numeric;
    Result = if((КолТестовВсего > 0), ((КолТестовУспех_ / КолТестовВсего_) * 100), 0);
  end;

  func ПрцТестовПровал: numeric;
    Result = if((КолТестовВсего > 0), ((КолТестовПровал_ / КолТестовВсего_) * 100), 0);
  end;

  func ПрцТестовБезРезультата: numeric;
    var локКолТестовБезРезультата: integer;
    локКолТестовБезРезультата = КолТестовБезРезультата;
    Result = if((КолТестовВсего > 0), ((локКолТестовБезРезультата / КолТестовВсего_) * 100), 0);
  end;

  proc УстСтатистику(Value: integer[]); --[Всего,Успех,Провал]
    КолТестовВсего_ = Value[1];
    КолТестовУспех_ = Value[2];
    КолТестовПровал_ = Value[3];
  end;

  proc ОбновитьСтатистику;
  end;

inobject private

  var НомерПП_: integer;
  var ИконкаЭлемента_: Image;
  var ОписаниеЭлемента_: string;
  var ПолноеИмяКласса_: string;
  var ДанныеВЗаписи_: Record;
  var КолТестовВсего_: integer;
  var КолТестовУспех_: integer;
  var КолТестовПровал_: integer;

  var ДанныеИзменены_: logical;

  proc ИзменитьСостояниеЗаписи;
    СИС2.ФункцииДокумента.RecordEdit(ДанныеВЗаписи_);
    if not ДанныеВЗаписи_.Modified then
      ДанныеВЗаписи_.Modified = true;
    fi;
  end;


end